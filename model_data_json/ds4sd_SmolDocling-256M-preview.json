{
    "model_id": "ds4sd/SmolDocling-256M-preview",
    "downloads": 80269,
    "tags": [
        "transformers",
        "onnx",
        "safetensors",
        "idefics3",
        "image-text-to-text",
        "conversational",
        "en",
        "arxiv:2503.11576",
        "arxiv:2305.03393",
        "base_model:HuggingFaceTB/SmolVLM-256M-Instruct",
        "base_model:quantized:HuggingFaceTB/SmolVLM-256M-Instruct",
        "license:cdla-permissive-2.0",
        "endpoints_compatible",
        "region:us"
    ],
    "description": "--- base_model: - HuggingFaceTB/SmolVLM-256M-Instruct language: - en library_name: transformers license: cdla-permissive-2.0 pipeline_tag: image-text-to-text --- <div style=\"display: flex; align-items: center;\"> <img src=\" alt=\"SmolDocling\" style=\"width: 200px; height: auto; margin-right: 20px;\"> <div> <h3>SmolDocling-256M-preview</h3> <p>SmolDocling is a multimodal Image-Text-to-Text model designed for efficient document conversion. It retains Docling's most popular features while ensuring full compatibility with Docling through seamless support for <strong>DoclingDocuments</strong>.</p> </div> </div> This model was presented in the paper SmolDocling: An ultra-compact vision-language model for end-to-end multi-modal document conversion. ### 🚀 Features: - 🏷️ **DocTags for Efficient Tokenization** – Introduces DocTags an efficient and minimal representation for documents that is fully compatible with **DoclingDocuments**. - 🔍 **OCR (Optical Character Recognition)** – Extracts text accurately from images. - 📐 **Layout and Localization** – Preserves document structure and document element **bounding boxes**. - 💻 **Code Recognition** – Detects and formats code blocks including identation. - 🔢 **Formula Recognition** – Identifies and processes mathematical expressions. - 📊 **Chart Recognition** – Extracts and interprets chart data. - 📑 **Table Recognition** – Supports column and row headers for structured table extraction. - 🖼️ **Figure Classification** – Differentiates figures and graphical elements. - 📝 **Caption Correspondence** – Links captions to relevant images and figures. - 📜 **List Grouping** – Organizes and structures list elements correctly. - 📄 **Full-Page Conversion** – Processes entire pages for comprehensive document conversion including all page elements (code, equations, tables, charts etc.) - 🔲 **OCR with Bounding Boxes** – OCR regions using a bounding box. - 📂 **General Document Processing** – Trained for both scientific and non-scientific documents. - 🔄 **Seamless Docling Integration** – Import into **Docling** and export in multiple formats. - 💨 **Fast inference using VLLM** – Avg of 0.35 secs per page on A100 GPU. ### 🚧 *Coming soon!* - 📊 **Better chart recognition 🛠️** - 📚 **One shot multi-page inference ⏱️** - 🧪 **Chemical Recognition** - 📙 **Datasets** ## ⌨️ Get started (code examples) You can use **transformers**, **vllm**, or **onnx** to perform inference, and Docling to convert results to variety of output formats (md, html, etc.): <details> <summary>📄 Single page image inference using Tranformers 🤖</summary> </details> <details> <summary> 🚀 Fast Batch Inference Using VLLM</summary> </details> <details> <summary> ONNX Inference</summary> </details> 💻 Local inference on Apple Silicon with MLX: see here ## DocTags <img src=\" width=\"800\" height=\"auto\" alt=\"Image description\"> DocTags create a clear and structured system of tags and rules that separate text from the document's structure. This makes things easier for Image-to-Sequence models by reducing confusion. On the other hand, converting directly to formats like HTML or Markdown can be messy—it often loses details, doesn’t clearly show the document’s layout, and increases the number of tokens, making processing less efficient. DocTags are integrated with Docling, which allows export to HTML, Markdown, and JSON. These exports can be offloaded to the CPU, reducing token generation overhead and improving efficiency. ## Supported Instructions <table> <tr> <td><b>Description</b></td> <td><b>Instruction</b></td> <td><b>Comment</b></td> </tr> <tr> <td><b>Full conversion</b></td> <td>Convert this page to docling.</td> <td>DocTags represetation</td> </tr> <tr> <td><b>Chart</b></td> <td>Convert chart to table.</td> <td>(e.g., &lt;chart&gt;)</td> </tr> <tr> <td><b>Formula</b></td> <td>Convert formula to LaTeX.</td> <td>(e.g., &lt;formula&gt;)</td> </tr> <tr> <td><b>Code</b></td> <td>Convert code to text.</td> <td>(e.g., &lt;code&gt;)</td> </tr> <tr> <td><b>Table</b></td> <td>Convert table to OTSL.</td> <td>(e.g., &lt;otsl&gt;) OTSL: <a href=\" et al., 2023</a></td> </tr> <tr> <td rowspan=4><b>Actions and Pipelines</b></td> <td>OCR the text in a specific location: &lt;loc_155&gt;&lt;loc_233&gt;&lt;loc_206&gt;&lt;loc_237&gt;</td> <td></td> </tr> <tr> <td>Identify element at: &lt;loc_247&gt;&lt;loc_482&gt;&lt;10c_252&gt;&lt;loc_486&gt;</td> <td></td> </tr> <tr> <td>Find all 'text' elements on the page, retrieve all section headers.</td> <td></td> </tr> <tr> <td>Detect footer elements on the page.</td> <td></td> </tr> </table> #### Model Summary - **Developed by:** Docling Team, IBM Research - **Model type:** Multi-modal model (image+text) - **Language(s) (NLP):** English - **License:** Apache 2.0 - **Architecture:** Based on Idefics3 (see technical summary) - **Finetuned from model:** Based on SmolVLM-256M-Instruct **Repository:** Docling **Paper:** arXiv **Project Page:** Hugging Face **Citation:** **Demo:** HF Space"
}