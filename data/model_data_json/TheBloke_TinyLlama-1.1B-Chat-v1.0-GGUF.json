{
    "model_id": "TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF",
    "downloads": 122997,
    "tags": [
        "transformers",
        "gguf",
        "tinyllama",
        "en",
        "dataset:cerebras/SlimPajama-627B",
        "dataset:bigcode/starcoderdata",
        "dataset:OpenAssistant/oasst_top1_2023-08-25",
        "base_model:TinyLlama/TinyLlama-1.1B-Chat-v1.0",
        "base_model:quantized:TinyLlama/TinyLlama-1.1B-Chat-v1.0",
        "license:apache-2.0",
        "region:us",
        "conversational"
    ],
    "description": "--- base_model: TinyLlama/TinyLlama-1.1B-Chat-v1.0 datasets: - cerebras/SlimPajama-627B - bigcode/starcoderdata - OpenAssistant/oasst_top1_2023-08-25 inference: false language: - en license: apache-2.0 model_creator: TinyLlama model_name: Tinyllama 1.1B Chat v1.0 model_type: tinyllama prompt_template: '<|system|> {system_message}</s> <|user|> {prompt}</s> <|assistant|> ' quantized_by: TheBloke --- <!-- markdownlint-disable MD041 --> <!-- header start --> <!-- 200823 --> <div style=\"width: auto; margin-left: auto; margin-right: auto\"> <img src=\" alt=\"TheBlokeAI\" style=\"width: 100%; min-width: 400px; display: block; margin: auto;\"> </div> <div style=\"display: flex; justify-content: space-between; width: 100%;\"> <div style=\"display: flex; flex-direction: column; align-items: flex-start;\"> <p style=\"margin-top: 0.5em; margin-bottom: 0em;\"><a href=\" & support: TheBloke's Discord server</a></p> </div> <div style=\"display: flex; flex-direction: column; align-items: flex-end;\"> <p style=\"margin-top: 0.5em; margin-bottom: 0em;\"><a href=\" to contribute? TheBloke's Patreon page</a></p> </div> </div> <div style=\"text-align:center; margin-top: 0em; margin-bottom: 0em\"><p style=\"margin-top: 0.25em; margin-bottom: 0em;\">TheBloke's LLM work is generously supported by a grant from <a href=\" horowitz (a16z)</a></p></div> <hr style=\"margin-top: 1.0em; margin-bottom: 1.0em;\"> <!-- header end --> # Tinyllama 1.1B Chat v1.0 - GGUF - Model creator: TinyLlama - Original model: Tinyllama 1.1B Chat v1.0 <!-- description start --> ## Description This repo contains GGUF format model files for TinyLlama's Tinyllama 1.1B Chat v1.0. These files were quantised using hardware kindly provided by Massed Compute. <!-- description end --> <!-- README_GGUF.md-about-gguf start --> ### About GGUF GGUF is a new format introduced by the llama.cpp team on August 21st 2023. It is a replacement for GGML, which is no longer supported by llama.cpp. Here is an incomplete list of clients and libraries that are known to support GGUF: * llama.cpp. The source project for GGUF. Offers a CLI and a server option. * text-generation-webui, the most widely used web UI, with many features and powerful extensions. Supports GPU acceleration. * KoboldCpp, a fully featured web UI, with GPU accel across all platforms and GPU architectures. Especially good for story telling. * GPT4All, a free and open source local running GUI, supporting Windows, Linux and macOS with full GPU accel. * LM Studio, an easy-to-use and powerful local GUI for Windows and macOS (Silicon), with GPU acceleration. Linux available, in beta as of 27/11/2023. * LoLLMS Web UI, a great web UI with many interesting and unique features, including a full model library for easy model selection. * Faraday.dev, an attractive and easy to use character-based chat GUI for Windows and macOS (both Silicon and Intel), with GPU acceleration. * llama-cpp-python, a Python library with GPU accel, LangChain support, and OpenAI-compatible API server. * candle, a Rust ML framework with a focus on performance, including GPU support, and ease of use. * ctransformers, a Python library with GPU accel, LangChain support, and OpenAI-compatible AI server. Note, as of time of writing (November 27th 2023), ctransformers has not been updated in a long time and does not support many recent models. <!-- README_GGUF.md-about-gguf end --> <!-- repositories-available start --> ## Repositories available * AWQ model(s) for GPU inference. * GPTQ models for GPU inference, with multiple quantisation parameter options. * 2, 3, 4, 5, 6 and 8-bit GGUF models for CPU+GPU inference * TinyLlama's original unquantised fp16 model in pytorch format, for GPU inference and for further conversions <!-- repositories-available end --> <!-- prompt-template start --> ## Prompt template: Zephyr <!-- prompt-template end --> <!-- compatibility_gguf start --> ## Compatibility These quantised GGUFv2 files are compatible with llama.cpp from August 27th onwards, as of commit d0cee0d They are also compatible with many third party UIs and libraries - please see the list at the top of this README. ## Explanation of quantisation methods <details> <summary>Click to see details</summary> The new methods available are: * GGML_TYPE_Q2_K - \"type-1\" 2-bit quantization in super-blocks containing 16 blocks, each block having 16 weight. Block scales and mins are quantized with 4 bits. This ends up effectively using 2.5625 bits per weight (bpw) * GGML_TYPE_Q3_K - \"type-0\" 3-bit quantization in super-blocks containing 16 blocks, each block having 16 weights. Scales are quantized with 6 bits. This end up using 3.4375 bpw. * GGML_TYPE_Q4_K - \"type-1\" 4-bit quantization in super-blocks containing 8 blocks, each block having 32 weights. Scales and mins are quantized with 6 bits. This ends up using 4.5 bpw. * GGML_TYPE_Q5_K - \"type-1\" 5-bit quantization. Same super-block structure as GGML_TYPE_Q4_K resulting in 5.5 bpw * GGML_TYPE_Q6_K - \"type-0\" 6-bit quantization. Super-blocks with 16 blocks, each block having 16 weights. Scales are quantized with 8 bits. This ends up using 6.5625 bpw Refer to the Provided Files table below to see what files use which methods, and how. </details> <!-- compatibility_gguf end --> <!-- README_GGUF.md-provided-files start --> ## Provided files | Name | Quant method | Bits | Size | Max RAM required | Use case | | ---- | ---- | ---- | ---- | ---- | ----- | | tinyllama-1.1b-chat-v1.0.Q2_K.gguf | Q2_K | 2 | 0.48 GB| 2.98 GB | smallest, significant quality loss - not recommended for most purposes | | tinyllama-1.1b-chat-v1.0.Q3_K_S.gguf | Q3_K_S | 3 | 0.50 GB| 3.00 GB | very small, high quality loss | | tinyllama-1.1b-chat-v1.0.Q3_K_M.gguf | Q3_K_M | 3 | 0.55 GB| 3.05 GB | very small, high quality loss | | tinyllama-1.1b-chat-v1.0.Q3_K_L.gguf | Q3_K_L | 3 | 0.59 GB| 3.09 GB | small, substantial quality loss | | tinyllama-1.1b-chat-v1.0.Q4_0.gguf | Q4_0 | 4 | 0.64 GB| 3.14 GB | legacy; small, very high quality loss - prefer using Q3_K_M | | tinyllama-1.1b-chat-v1.0.Q4_K_S.gguf | Q4_K_S | 4 | 0.64 GB| 3.14 GB | small, greater quality loss | | tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf | Q4_K_M | 4 | 0.67 GB| 3.17 GB | medium, balanced quality - recommended | | tinyllama-1.1b-chat-v1.0.Q5_0.gguf | Q5_0 | 5 | 0.77 GB| 3.27 GB | legacy; medium, balanced quality - prefer using Q4_K_M | | tinyllama-1.1b-chat-v1.0.Q5_K_S.gguf | Q5_K_S | 5 | 0.77 GB| 3.27 GB | large, low quality loss - recommended | | tinyllama-1.1b-chat-v1.0.Q5_K_M.gguf | Q5_K_M | 5 | 0.78 GB| 3.28 GB | large, very low quality loss - recommended | | tinyllama-1.1b-chat-v1.0.Q6_K.gguf | Q6_K | 6 | 0.90 GB| 3.40 GB | very large, extremely low quality loss | | tinyllama-1.1b-chat-v1.0.Q8_0.gguf | Q8_0 | 8 | 1.17 GB| 3.67 GB | very large, extremely low quality loss - not recommended | **Note**: the above RAM figures assume no GPU offloading. If layers are offloaded to the GPU, this will reduce RAM usage and use VRAM instead. <!-- README_GGUF.md-provided-files end --> <!-- README_GGUF.md-how-to-download start --> ## How to download GGUF files **Note for manual downloaders:** You almost never want to clone the entire repo! Multiple different quantisation formats are provided, and most users only want to pick and download a single file. The following clients/libraries will automatically download models for you, providing a list of available models to choose from: * LM Studio * LoLLMS Web UI * Faraday.dev ### In Under Download Model, you can enter the model repo: TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF and below it, a specific filename to download, such as: tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf. Then click Download. ### On the command line, including multiple files at once I recommend using the Python library: Then you can download any individual model file to the current directory, at high speed, with a command like this: <details> <summary>More advanced huggingface-cli download usage (click to read)</summary> You can also download multiple files at once with a pattern: For more documentation on downloading with , please see: HF -> Hub Python Library -> Download files -> Download from the CLI. To accelerate downloads on fast connections (1Gbit/s or higher), install : And set environment variable to : Windows Command Line users: You can set the environment variable by running before the download command. </details> <!-- README_GGUF.md-how-to-download end --> <!-- README_GGUF.md-how-to-run start --> ## Example command Make sure you are using from commit d0cee0d or later. Change to the number of layers to offload to GPU. Remove it if you don't have GPU acceleration. Change to the desired sequence length. For extended sequence models - eg 8K, 16K, 32K - the necessary RoPE scaling parameters are read from the GGUF file and set by llama.cpp automatically. Note that longer sequence lengths require much more resources, so you may need to reduce this value. If you want to have a chat-style conversation, replace the argument with For other parameters and how to use them, please refer to the llama.cpp documentation ## How to run in Further instructions can be found in the text-generation-webui documentation, here: text-generation-webui/docs/04 ‚Äê Model Tab.md. ## How to run from Python code You can use GGUF models from Python using the llama-cpp-python or ctransformers libraries. Note that at the time of writing (Nov 27th 2023), ctransformers has not been updated for some time and is not compatible with some recent models. Therefore I recommend you use llama-cpp-python. ### How to load this model in Python code, using llama-cpp-python For full documentation, please see: llama-cpp-python docs. #### First install the package Run one of the following commands, according to your system: #### Simple llama-cpp-python example code ## How to use with LangChain Here are guides on using llama-cpp-python and ctransformers with LangChain: * LangChain + llama-cpp-python * LangChain + ctransformers <!-- README_GGUF.md-how-to-run end --> <!-- footer start --> <!-- 200823 --> ## Discord For further support, and discussions on these models and AI in general, join us at: TheBloke AI's Discord server ## Thanks, and how to contribute Thanks to the chirper.ai team! Thanks to Clay from gpus.llm-utils.org! I've had a lot of people ask if they can contribute. I enjoy providing models and helping people, and would love to be able to spend even more time doing it, as well as expanding into new projects like fine tuning/training. If you're able and willing to contribute it will be most gratefully received and will help me to keep providing more models, and to start work on new AI projects. Donaters will get priority support on any and all AI/LLM/model questions and requests, access to a private Discord room, plus other benefits. * Patreon: * Ko-Fi: **Special thanks to**: Aemon Algiz. **Patreon special mentions**: Michael Levine, ÈòøÊòé, Trailburnt, Nikolai Manek, John Detwiler, Randy H, Will Dee, Sebastain Graf, NimbleBox.ai, Eugene Pentland, Emad Mostaque, Ai Maven, Jim Angel, Jeff Scroggin, Michael Davis, Manuel Alberto Morcote, Stephen Murray, Robert, Justin Joy, Luke @flexchar, Brandon Frisco, Elijah Stavena, S_X, Dan Guido, Undi ., Komninos Chatzipapas, Shadi, theTransient, Lone Striker, Raven Klaugh, jjj, Cap'n Zoog, Michel-Marie MAUDET (LINAGORA), Matthew Berman, David, Fen Risland, Omer Bin Jawed, Luke Pendergrass, Kalila, OG, Erik Bj√§reholt, Rooh Singh, Joseph William Delisle, Dan Lewis, TL, John Villwock, AzureBlack, Brad, Pedro Madruga, Caitlyn Gatomon, K, jinyuan sun, Mano Prime, Alex, Jeffrey Morgan, Alicia Loh, Illia Dulskyi, Chadd, transmissions 11, fincy, Rainer Wilmers, ReadyPlayerEmma, knownsqashed, Mandus, biorpg, Deo Leter, Brandon Phillips, SuperWojo, Sean Connelly, Iucharbius, Jack West, Harry Royden McLaughlin, Nicholas, terasurfer, Vitor Caleffi, Duane Dunston, Johann-Peter Hartmann, David Ziegler, Olakabola, Ken Nordquist, Trenton Dambrowitz, Tom X Nguyen, Vadim, Ajan Kanaga, Leonard Tan, Clay Pascal, Alexandros Triantafyllidis, JM33133, Xule, vamX, ya boyyy, subjectnull, Talal Aujan, Alps Aficionado, wassieverse, Ari Malik, James Bentley, Woland, Spencer Kim, Michael Dempsey, Fred von Graf, Elle, zynix, William Richards, Stanislav Ovsiannikov, Edmond Seymore, Jonathan Leane, Martin Kemka, usrbinkat, Enrico Ros Thank you to all my generous patrons and donaters! And thank you again to a16z for their generous grant. <!-- footer end --> <!-- original-model-card start --> # Original model card: TinyLlama's Tinyllama 1.1B Chat v1.0 <div align=\"center\"> # TinyLlama-1.1B </div> The TinyLlama project aims to **pretrain** a **1.1B Llama model on 3 trillion tokens**. With some proper optimization, we can achieve this within a span of \"just\" 90 days using 16 A100-40G GPUs üöÄüöÄ. The training has started on 2023-09-01. We adopted exactly the same architecture and tokenizer as Llama 2. This means TinyLlama can be plugged and played in many open-source projects built upon Llama. Besides, TinyLlama is compact with only 1.1B parameters. This compactness allows it to cater to a multitude of applications demanding a restricted computation and memory footprint. #### This Model This is the chat model finetuned on top of TinyLlama/TinyLlama-1.1B-intermediate-step-1431k-3T. **We follow HF's Zephyr's training recipe.** The model was \" initially fine-tuned on a variant of the []( dataset, which contains a diverse range of synthetic dialogues generated by ChatGPT. We then further aligned the model with ü§ó TRL's on the openbmb/UltraFeedback dataset, which contain 64k prompts and model completions that are ranked by GPT-4.\" #### How to use You will need the transformers>=4.34 Do check the TinyLlama github page for more information. <!-- original-model-card end -->",
    "model_explanation_gemini": "A 1.1B parameter chat model optimized for dialogue tasks, quantized in GGUF format for efficient CPU/GPU inference."
}