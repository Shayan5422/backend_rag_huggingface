{
    "model_id": "MaziyarPanahi/firefunction-v2-GGUF",
    "downloads": 264038,
    "tags": [
        "transformers",
        "gguf",
        "quantized",
        "2-bit",
        "3-bit",
        "4-bit",
        "5-bit",
        "6-bit",
        "8-bit",
        "GGUF",
        "safetensors",
        "text-generation",
        "conversational",
        "function-calling",
        "text-generation-inference",
        "region:us",
        "base_model:fireworks-ai/llama-3-firefunction-v2",
        "base_model:quantized:fireworks-ai/llama-3-firefunction-v2",
        "license:llama3",
        "imatrix"
    ],
    "description": "--- tags: - quantized - 2-bit - 3-bit - 4-bit - 5-bit - 6-bit - 8-bit - GGUF - transformers - safetensors - text-generation - conversational - function-calling - text-generation-inference - region:us - text-generation model_name: MaziyarPanahi/firefunction-v2-GGUF base_model: fireworks-ai/firefunction-v2 inference: false model_creator: fireworks-ai pipeline_tag: text-generation quantized_by: MaziyarPanahi license: llama3 --- # MaziyarPanahi/firefunction-v2-GGUF - Model creator: fireworks-ai - Original model: fireworks-ai/firefunction-v2 ## Description MaziyarPanahi/firefunction-v2-GGUF contains GGUF format model files for fireworks-ai/firefunction-v2. ### About GGUF GGUF is a new format introduced by the llama.cpp team on August 21st 2023. It is a replacement for GGML, which is no longer supported by llama.cpp. Here is an incomplete list of clients and libraries that are known to support GGUF: * llama.cpp. The source project for GGUF. Offers a CLI and a server option. * llama-cpp-python, a Python library with GPU accel, LangChain support, and OpenAI-compatible API server. * LM Studio, an easy-to-use and powerful local GUI for Windows and macOS (Silicon), with GPU acceleration. Linux available, in beta as of 27/11/2023. * text-generation-webui, the most widely used web UI, with many features and powerful extensions. Supports GPU acceleration. * KoboldCpp, a fully featured web UI, with GPU accel across all platforms and GPU architectures. Especially good for story telling. * GPT4All, a free and open source local running GUI, supporting Windows, Linux and macOS with full GPU accel. * LoLLMS Web UI, a great web UI with many interesting and unique features, including a full model library for easy model selection. * Faraday.dev, an attractive and easy to use character-based chat GUI for Windows and macOS (both Silicon and Intel), with GPU acceleration. * candle, a Rust ML framework with a focus on performance, including GPU support, and ease of use. * ctransformers, a Python library with GPU accel, LangChain support, and OpenAI-compatible AI server. Note, as of time of writing (November 27th 2023), ctransformers has not been updated in a long time and does not support many recent models. ## Special thanks üôè Special thanks to Georgi Gerganov and the whole team working on llama.cpp for making all of this possible. Original README --- # FireFunction V2: Fireworks Function Calling Model **Try on Fireworks** | **API Docs** | **Demo App** | **Discord** <img src=\" alt=\"firefunction\" width=\"400\"/> FireFunction is a state-of-the-art function calling model with a commercially viable license. View detailed info in our announcement blog. Key info and highlights: **Comparison with other models:** - Competitive with GPT-4o at function-calling, scoring 0.81 vs 0.80 on a medley of public evaluations - Trained on Llama 3 and retains Llama 3‚Äôs conversation and instruction-following capabilities, scoring 0.84 vs Llama 3‚Äôs 0.89 on MT bench - Significant quality improvements over FireFunction v1 across the broad range of metrics **General info:** üêæ Successor of the FireFunction model üîÜ Support of parallel function calling (unlike FireFunction v1) and good instruction following üí° Hosted on the Fireworks platform at < 10% of the cost of GPT 4o and 2x the speed",
    "model_explanation_gemini": "Quantized GGUF version of FireFunction V2, a high-performance function-calling model with conversational abilities, optimized for cost-effective deployment."
}