{
    "model_id": "hugging-quants/Meta-Llama-3.1-8B-Instruct-AWQ-INT4",
    "downloads": 338459,
    "tags": [
        "transformers",
        "safetensors",
        "llama",
        "text-generation",
        "llama-3.1",
        "meta",
        "autoawq",
        "conversational",
        "en",
        "de",
        "fr",
        "it",
        "pt",
        "hi",
        "es",
        "th",
        "license:llama3.1",
        "autotrain_compatible",
        "text-generation-inference",
        "endpoints_compatible",
        "4-bit",
        "awq",
        "region:us"
    ],
    "description": "--- license: llama3.1 language: - en - de - fr - it - pt - hi - es - th library_name: transformers pipeline_tag: text-generation tags: - llama-3.1 - meta - autoawq --- > [!IMPORTANT] > This repository is a community-driven quantized version of the original model []( which is the BF16 half-precision official version released by Meta AI. ## Model Information The Meta Llama 3.1 collection of multilingual large language models (LLMs) is a collection of pretrained and instruction tuned generative models in 8B, 70B and 405B sizes (text in/text out). The Llama 3.1 instruction tuned text only models (8B, 70B, 405B) are optimized for multilingual dialogue use cases and outperform many of the available open source and closed chat models on common industry benchmarks. This repository contains []( quantized using AutoAWQ from FP16 down to INT4 using the GEMM kernels performing zero-point quantization with a group size of 128. ## Model Usage > [!NOTE] > In order to run the inference with Llama 3.1 8B Instruct AWQ in INT4, around 4 GiB of VRAM are needed only for loading the model checkpoint, without including the KV cache or the CUDA graphs, meaning that there should be a bit over that VRAM available. In order to use the current quantized model, support is offered for different solutions as , , or . ### ðŸ¤— Transformers In order to run the inference with Llama 3.1 8B Instruct AWQ in INT4, you need to install the following packages: To run the inference on top of Llama 3.1 8B Instruct AWQ in INT4 precision, the AWQ model can be instantiated as any other causal language modeling model via and run the inference normally. ### AutoAWQ In order to run the inference with Llama 3.1 8B Instruct AWQ in INT4, you need to install the following packages: Alternatively, one may want to run that via even though it's built on top of ðŸ¤— , which is the recommended approach instead as described above. The AutoAWQ script has been adapted from []( ### ðŸ¤— Text Generation Inference (TGI) To run the with Llama 3.1 8B Instruct AWQ in INT4 with Marlin kernels for optimized inference speed, you will need to have Docker installed (see installation notes) and the Python package as you need to login to the Hugging Face Hub. Then you just need to run the TGI v2.2.0 (or higher) Docker container as follows: > [!NOTE] > TGI will expose different endpoints, to see all the endpoints available check TGI OpenAPI Specification. To send request to the deployed TGI endpoint compatible with OpenAI OpenAPI specification i.e. : Or programatically via the Python client as follows: Alternatively, the OpenAI Python client can also be used (see installation notes) as follows: ### vLLM To run vLLM with Llama 3.1 8B Instruct AWQ in INT4, you will need to have Docker installed (see installation notes) and run the latest vLLM Docker container as follows: To send request to the deployed vLLM endpoint compatible with OpenAI OpenAPI specification i.e. : Or programatically via the Python client (see installation notes) as follows: ## Quantization Reproduction > [!NOTE] > In order to quantize Llama 3.1 8B Instruct using AutoAWQ, you will need to use an instance with at least enough CPU RAM to fit the whole model i.e. ~8GiB, and an NVIDIA GPU with 16GiB of VRAM to quantize it. In order to quantize Llama 3.1 8B Instruct, first install the following packages: Then run the following script, adapted from [](",
    "model_explanation_gemini": "An INT4-quantized version of Meta's multilingual 8B Llama 3.1 Instruct model optimized for efficient multilingual dialogue generation using AutoAWQ."
}